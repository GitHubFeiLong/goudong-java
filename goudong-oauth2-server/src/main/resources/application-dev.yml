server:
  port: 10001
  servlet:
    context-path: /api/oauth2
spring:
  main:
    allow-bean-definition-overriding: true #重命名其中一个 bean 或启用覆盖
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false #工程中的资源文件建立映射
  application:
    name: goudong-oauth2-server #微服务名
  # json日期格式化
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 # nacos服务集群
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/goudong?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

  redis:
    database: 0   # Redis数据库索引（默认为0）
    host: 127.0.0.1 # Redis服务器地址
    port: 6379
    password: ${REDIS_PASSWORD}
    timeout: 3000

  ## flyway数据迁移
  flyway:
    #是否开启
    enabled: true
    locations: classpath:db/migration #迁移脚本的位置，默认db/migration
    baseline-on-migrate: true
    out-of-order: false


mybatis-plus:
  #  mapper-locations: classpath:mapper/*.xml
  mapper-locations: classpath*:/mapper/*.xml #其他包的也能扫描到
  type-aliases-package: com.goudong.commons.po
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      logic-delete-field: deleted #配置逻辑删除，也可以在字段上加注解 @TableLogic(value = "0",delval = "1")
      logic-delete-value: 1 # 删除1
      logic-not-delete-value: 0
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: assign_id
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # mybatis使用分页插件
  pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
ribbon:
  ReadTimeout: 5000 #建立连接所用时间（避免超时）
  ConnectTimeout: 5000 #连接后接口调用时间（避免超时）

knife4j:
  enable: true         # 是否开启Knife4j增强模式，默认值为false
  production: false    # 生产环境开启
  basic:
    enable: true       # BasicHttp功能，默认为false
    username: admin    # 用户名
    password: 123456   # 密码
  setting:             # 前端Ui的个性化配置属性
    enableDebug: true # 启用调试，默认为true 无效

# 下面都是自定义配置 #
ui:
  # 绑定账号页面
  bind-page: http://localhost:9998/bindPage.html
  # 后端路径传参给页面
  transition-page: http://localhost:9998/transition.html
  # 前端首页
  index-page: http://localhost:9998/index.html

scheduler:
  ScanIgnoreResourceScheduler:
    fixedRate: 36000000 #扫描白名单接口时间间隔单位毫秒
    initialDelay: 3000 # 启动完项目等一段时间再执行。
