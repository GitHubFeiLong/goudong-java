<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goudong.oauth2.mapper.AuthorityUserMapper">
    <sql id="authority_user_column">
        uuid,
        username,
        password,
        email,
        phone,
        nickname,
        qq_open_id,
        remark,
        valid_time,
        is_delete,
        update_time,
        create_time
    </sql>

    <insert id="updateInsert" useGeneratedKeys="true" keyColumn="uuid" keyProperty="uuid">
        insert into authority_user (username, password, email, phone)
        values (#{username}, #{password}, #{email}, #{phone})
        ON DUPLICATE KEY UPDATE username=#{username}, password=#{password}, email=#{email}, phone=#{phone},update_time=now()
    </insert>

    <resultMap id="userDetailResultMap" type="com.goudong.commons.dto.AuthorityUserDTO">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="nickname" property="nickname"/>
        <result column="remark" property="remark"/>
        <result column="valid_time" property="validTime"/>
        <collection property="authorityRoleDTOS" ofType="com.goudong.commons.dto.AuthorityRoleDTO">
            <result column="ar_role_name" property="roleName"/>
            <result column="ar_role_name_CN" property="roleNameCn"/>
            <result column="ar_remark" property="remark"/>
        </collection>
        <collection property="authorityMenuDTOS" ofType="com.goudong.commons.dto.AuthorityMenuDTO">
            <result column="amId" property="id"/>
            <result column="amUrl" property="url"/>
            <result column="amMethod" property="method"/>
            <result column="amMenuName" property="menuName"/>
            <result column="amParentId" property="parentId"/>
            <result column="amRemark" property="remark"/>
        </collection>
    </resultMap>
    <select id="selectUserDetailByUsername" resultMap="userDetailResultMap">
        select
        au.id,
        au.username,
        au.password,
        au.email,
        au.phone,
        au.nickname,
        au.remark,
        au.valid_time,
        ar.role_name ar_role_name,
        ar.role_name_CN ar_role_name_CN,
        ar.remark ar_remark,
        am.id amId,
        am.url amUrl,
        am.method amMethod,
        am.menu_name amMenuName,
        am.parent_id amParentId,
        am.remark amRemark
        from authority_user au
        inner join authority_user_role aur on au.id = aur.user_id
        inner join authority_role ar on aur.role_id = ar.id and ar.deleted=false
        left join authority_role_menu arm on arm.role_id = ar.id
        left join authority_menu am on am.id = arm.menu_id and am.deleted=false
        where <include refid="usernameConditionSQL"/>
        and <include refid="validTimeConditionSQL"/>
        and au.deleted=false
    </select>
</mapper>
