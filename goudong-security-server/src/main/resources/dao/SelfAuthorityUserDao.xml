<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goudong.security.dao.SelfAuthorityUserDao">

    <select id="selectRoleNameByUserUuid" resultType="java.lang.String">
        SELECT
            ar.role_name
        FROM authority_user au
        inner join authority_user_role aur on au.uuid=aur.user_uuid
        inner join authority_role ar on aur.role_uuid = ar.uuid
        where au.uuid=#{uuid}
    </select>
    <sql id="usernameConditionSQL">
        (username=#{username} or email=#{username} or phone=#{username})
    </sql>
    <sql id="validTimeConditionSQL">
        (valid_time is null or now() &lt; valid_time)
    </sql>
    <select id="selectUserByUsername" resultType="com.goudong.commons.po.AuthorityUserPO">
        select
            uuid,
            username,
            password,
            email,
            phone,
            nickname,
            remark,
            valid_time,
            is_delete,
            update_time,
            create_time
        from authority_user
        where <include refid="usernameConditionSQL"/>
        and <include refid="validTimeConditionSQL"/> and is_delete = false
    </select>
    <resultMap id="userDetailResultMap" type="com.goudong.commons.dto.AuthorityUserDTO">
        <result column="uuid" property="uuid"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="nickname" property="nickname"/>
        <result column="remark" property="remark"/>
        <result column="valid_time" property="validTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <collection property="authorityRoleDTOS" ofType="com.goudong.commons.dto.AuthorityRoleDTO">
            <result column="ar_role_name" property="roleName"/>
            <result column="ar_role_name_CN" property="roleNameCn"/>
            <result column="ar_remark" property="remark"/>
        </collection>
        <collection property="authorityMenuDTOS" ofType="com.goudong.commons.dto.AuthorityMenuDTO">
            <result column="amUuid" property="uuid"/>
            <result column="amUrl" property="url"/>
            <result column="amMethod" property="method"/>
            <result column="amMenuName" property="menuName"/>
            <result column="amParentUuid" property="parentUuid"/>
            <result column="amRemark" property="remark"/>
        </collection>
    </resultMap>
    <select id="selectUserDetailByUsername" resultMap="userDetailResultMap">
        select
            au.uuid,
            au.username,
            au.password,
            au.email,
            au.phone,
            au.nickname,
            au.remark,
            au.valid_time,
            au.update_time,
            au.create_time,
            ar.role_name ar_role_name,
            ar.role_name_CN ar_role_name_CN,
            ar.remark ar_remark,
            am.uuid amUuid,
            am.url amUrl,
            am.method amMethod,
            am.menu_name amMenuName,
            am.parent_uuid amParentUuid,
            am.remark amRemark
        from authority_user au
        inner join authority_user_role aur on au.uuid = aur.user_uuid and aur.is_delete = 0
        inner join authority_role ar on aur.role_uuid = ar.uuid and ar.is_delete = 0
        left join authority_role_menu arm on arm.role_uuid = ar.uuid and arm.is_delete = 0
        left join authority_menu am on am.uuid = arm.menu_uuid and am.is_delete = 0
        where <include refid="usernameConditionSQL"/>
        and <include refid="validTimeConditionSQL"/>
        and au.is_delete = false
    </select>
    <select id="selectRoleNameByMenu" resultType="java.lang.String">
        select
            ar.role_name
        from authority_menu am
        inner join authority_role_menu arm on am.uuid = arm.menu_uuid
        inner join authority_role ar on ar.uuid = arm.role_uuid
        where am.url = #{requestUrl} and am.method like concat('%',#{requestMethod},'%')
        and am.is_delete = false and ar.is_delete = false
    </select>
    <select id="selectUser" resultType="com.goudong.commons.po.AuthorityUserPO">
        select
            uuid,
            username,
            password,
            email,
            phone,
            nickname,
            remark,
            valid_time,
            is_delete,
            update_time,
            create_time
        from authority_user
        <where>
            <if test="username != null and username != ''">
                and username=#{username}
            </if>
            <if test="email != null and email != ''">
                and email=#{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone=#{phone}
            </if>
        </where>
        and <include refid="validTimeConditionSQL"/> and is_delete = false
    </select>
</mapper>
