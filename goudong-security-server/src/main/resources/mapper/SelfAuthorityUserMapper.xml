<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goudong.security.mapper.SelfAuthorityUserMapper">

    <select id="selectRoleNameByUserId" resultType="java.lang.String">
        SELECT
            ar.role_name
        FROM authority_user au
        inner join authority_user_role aur on au.id=aur.user_id
        inner join authority_role ar on aur.role_id = ar.id and ar.deleted=false
        where au.id=#{userId} and au.deleted=false
    </select>
    <sql id="usernameConditionSQL">
        (username=#{username} or email=#{username} or phone=#{username})
    </sql>
    <sql id="validTimeConditionSQL">
        (valid_time is null or now() &lt; valid_time)
    </sql>
    <select id="selectUserByUsername" resultType="com.goudong.commons.po.AuthorityUserPO">
        select
            id,
            username,
            password,
            email,
            phone,
            nickname,
            remark,
            valid_time,
            qq_open_id,
            deleted,
            create_time,
            update_time,
            create_user_id,
            update_user_id
        from authority_user
        where <include refid="usernameConditionSQL"/>
        and <include refid="validTimeConditionSQL"/> and deleted=false
    </select>
    <resultMap id="userDetailResultMap" type="com.goudong.commons.dto.AuthorityUserDTO">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="nickname" property="nickname"/>
        <result column="remark" property="remark"/>
        <result column="valid_time" property="validTime"/>
        <collection property="authorityRoleDTOS" ofType="com.goudong.commons.dto.AuthorityRoleDTO">
            <result column="ar_role_name" property="roleName"/>
            <result column="ar_role_name_CN" property="roleNameCn"/>
            <result column="ar_remark" property="remark"/>
        </collection>
        <collection property="authorityMenuDTOS" ofType="com.goudong.commons.dto.AuthorityMenuDTO">
            <result column="amId" property="id"/>
            <result column="amUrl" property="url"/>
            <result column="amMethod" property="method"/>
            <result column="amMenuName" property="menuName"/>
            <result column="amParentId" property="parentId"/>
            <result column="amRemark" property="remark"/>
        </collection>
    </resultMap>
    <select id="selectUserDetailByUsername" resultMap="userDetailResultMap">
        select
            au.id,
            au.username,
            au.password,
            au.email,
            au.phone,
            au.nickname,
            au.remark,
            au.valid_time,
            ar.role_name ar_role_name,
            ar.role_name_CN ar_role_name_CN,
            ar.remark ar_remark,
            am.id amId,
            am.url amUrl,
            am.method amMethod,
            am.menu_name amMenuName,
            am.parent_id amParentId,
            am.remark amRemark
        from authority_user au
        inner join authority_user_role aur on au.id = aur.user_id
        inner join authority_role ar on aur.role_id = ar.id and ar.deleted=false
        left join authority_role_menu arm on arm.role_id = ar.id
        left join authority_menu am on am.id = arm.menu_id and am.deleted=false
        where <include refid="usernameConditionSQL"/>
        and <include refid="validTimeConditionSQL"/>
        and au.deleted=false
    </select>
    <select id="selectRoleNameByMenu" resultType="java.lang.String">
        select
            ar.role_name
        from authority_menu am
        inner join authority_role_menu arm on am.id = arm.menu_id
        inner join authority_role ar on ar.id = arm.role_id and ar.deleted=false
        where am.url = #{requestUrl} and am.method like concat('%',#{requestMethod},'%')
        and am.deleted=false
    </select>
</mapper>
