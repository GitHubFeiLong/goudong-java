<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goudong.user.mapper.AuthorityUserMapper">
    <sql id="authority_user_column">
        uuid,
        username,
        password,
        email,
        phone,
        nickname,
        qq_open_id,
        remark,
        valid_time,
        is_delete,
        update_time,
        create_time
    </sql>

    <insert id="updateInsert" useGeneratedKeys="true" keyColumn="uuid" keyProperty="uuid">
        insert into authority_user (username, password, email, phone)
        values (#{username}, #{password}, #{email}, #{phone})
        ON DUPLICATE KEY UPDATE username=#{username}, password=#{password}, email=#{email}, phone=#{phone},update_time=now()
    </insert>

    <update id="updateByPatch">
        update authority_user
        <set>
            <if test="username!=null and username!=''">
                username=#{username},
            </if>
            <if test="password!=null and password!=''">
                password=#{password},
            </if>
            <if test="email!=null and email!=''">
                email=#{email},
            </if>
            <if test="phone!=null and phone!=''">
                phone=#{phone},
            </if>
            <if test="nickname!=null and nickname!=''">
                nickname=#{nickname},
            </if>
            <if test="remark!=null and remark!=''">
                remark=#{remark},
            </if>
            <if test="validTime!=null">
                valid_time=#{validTime},
            </if>
            <if test="isDelete!=null">
                is_delete=#{isDelete},
            </if>
            <if test="qqOpenId!=null and qqOpenId!=''">
                qq_open_id=#{qqOpenId},
            </if>
            <if test="username!=null and username!=''">
                username=#{username},
            </if>
            update_time = now()
        </set>
        where uuid = #{uuid}
    </update>
    <select id="selectUserNameByLikeUsername" resultType="java.lang.String">
        select username from authority_user where username like concat('%', #{username}, '%')
    </select>
    <select id="selectByAnd" resultType="com.goudong.commons.po.AuthorityUserPO">
        select <include refid="authority_user_column"/>
        from authority_user
        <where>
            <if test="uuid != null and uuid != ''">
                and uuid=#{uuid}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="password != null">
                and `password` = #{password}
            </if>
            <if test="email != null">
                and email = #{email}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="nickname != null">
                and nickname = #{nickname}
            </if>
            <if test="remark != null">
                and remark = #{remark}
            </if>
            <if test="validTime != null">
                and valid_time = #{validTime}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="qqOpenId != null">
                and qq_open_id = #{qqOpenId}
            </if>
        </where>
    </select>
    <select id="selectByOr" resultType="com.goudong.commons.po.AuthorityUserPO">
        select <include refid="authority_user_column"/>
        from authority_user
        <where>
            <if test="uuid != null and uuid != ''">
                or uuid=#{uuid}
            </if>
            <if test="username != null">
                or username = #{username}
            </if>
            <if test="password != null">
                or `password` = #{password}
            </if>
            <if test="email != null">
                or email = #{email}
            </if>
            <if test="phone != null">
                or phone = #{phone}
            </if>
            <if test="nickname != null">
                or nickname = #{nickname}
            </if>
            <if test="remark != null">
                or remark = #{remark}
            </if>
            <if test="validTime != null">
                or valid_time = #{validTime}
            </if>
            <if test="isDelete != null">
                or is_delete = #{isDelete}
            </if>
            <if test="updateTime != null">
                or update_time = #{updateTime}
            </if>
            <if test="createTime != null">
                or create_time = #{createTime}
            </if>
            <if test="qqOpenId != null">
                or qq_open_id = #{qqOpenId}
            </if>
        </where>
    </select>

    <resultMap id="userDetailResultMap" type="com.goudong.commons.dto.AuthorityUserDTO">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="nickname" property="nickname"/>
        <result column="remark" property="remark"/>
        <result column="valid_time" property="validTime"/>
        <collection property="authorityRoleDTOS" ofType="com.goudong.commons.dto.AuthorityRoleDTO">
            <result column="ar_role_name" property="roleName"/>
            <result column="ar_role_name_CN" property="roleNameCn"/>
            <result column="ar_remark" property="remark"/>
        </collection>
        <collection property="authorityMenuDTOS" ofType="com.goudong.commons.dto.AuthorityMenuDTO">
            <result column="amId" property="id"/>
            <result column="amUrl" property="url"/>
            <result column="amMethod" property="method"/>
            <result column="amMenuName" property="menuName"/>
            <result column="amParentId" property="parentId"/>
            <result column="amRemark" property="remark"/>
        </collection>
    </resultMap>
    <select id="selectUserDetailByUsername" resultMap="userDetailResultMap">
        select
        au.id,
        au.username,
        au.password,
        au.email,
        au.phone,
        au.nickname,
        au.remark,
        au.valid_time,
        ar.role_name ar_role_name,
        ar.role_name_CN ar_role_name_CN,
        ar.remark ar_remark,
        am.id amId,
        am.url amUrl,
        am.method amMethod,
        am.menu_name amMenuName,
        am.parent_id amParentId,
        am.remark amRemark
        from authority_user au
        inner join authority_user_role aur on au.id = aur.user_id
        inner join authority_role ar on aur.role_id = ar.id and ar.deleted=false
        left join authority_role_menu arm on arm.role_id = ar.id
        left join authority_menu am on am.id = arm.menu_id and am.deleted=false
        where (username=#{username} or email=#{username} or phone=#{username})
        and (valid_time is null or now() &lt; valid_time)
        and au.deleted=false
    </select>
</mapper>
