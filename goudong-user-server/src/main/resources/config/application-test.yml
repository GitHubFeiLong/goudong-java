logging:
  config: classpath:log4j2/log4j2-dev.xml
  level:
    ROOT: INFO
    com.goudong.user: DEBUG
    com.goudong: INFO
server:
  port: 10001
  servlet:
    context-path: /api/user
spring:
  main:
    allow-bean-definition-overriding: true #重命名其中一个 bean 或启用覆盖
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false #工程中的资源文件建立映射
  application:
    name: goudong-user-server #微服务名
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.74.128:8848 # nacos服务集群
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: GMT+8
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.74.128:3306/goudong_user?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&createDatabaseIfNotExist=true
    username: ${MYSQL_USERNAME}
    password: "${MYSQL_PASSWORD}"
    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 配置监控服务器
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: admin
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        #allow:
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"

  redis:
    password: "${REDIS_PASSWORD}"
    timeout: 3000
    sentinel:
      master: mymaster
      nodes:
        - 192.168.74.128:26379
        - 192.168.74.128:26380
        - 192.168.74.128:26381
    lettuce:
      pool:
        max-active: 100 # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 100 # 连接池中的最大空闲连接
        min-idle: 50 # 连接池中的最小空闲连接
        max-wait: 6000 # 连接池最大阻塞等待时间（使用负值表示没有限制）
  ## flyway数据迁移
  flyway:
    #是否开启
    enabled: true
    baseline-version: 0
    baseline-on-migrate: true
    table: goudong_user_server_flyway_schema_history

ribbon:
  ReadTimeout: 5000 #建立连接所用时间（避免超时）
  ConnectTimeout: 5000 #连接后接口调用时间（避免超时）

knife4j:
  enable: true         # 是否开启Knife4j增强模式，默认值为false
  production: false    # 生产环境开启
  basic:
    enable: true       # BasicHttp功能，默认为false
    username: knife4j  # 用户名
    password: knife4j  # 密码
  setting:             # 前端Ui的个性化配置属性
    enableDebug: true  # 启用调试，默认为true 无效

# commons配置
commons:
  # 白名单配置
  whitelist:
    # 是否开启白名单（生产环境建议不开启）
    enable: true
    # 自定义其他框架静态资源。
    whitelists:
      - pattern: /api/*.html
        method: GET
      - pattern: /api/*.js
        method: GET
      - pattern: /api/whitelist/**
        method: GET,POST,DELETE,PUT